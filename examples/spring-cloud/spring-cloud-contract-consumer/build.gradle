buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springboot_version}"
    }
}

repositories {
    mavenLocal()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springcloud_version}"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.cloud:spring-cloud-starter-openfeign")
    compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    compile('com.h2database:h2:1.4.196')
    // This dependency is only included so that the gradle build executes the provider build first!
    // It should not be included in a real project.
    compile project(':spring-cloud-contract-provider')
    testCompile("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

test {
    // excluding this test since it cannot resolve the Spring Cloud Contract stub on CI
    exclude 'io/reflectoring/UserClientTest**'
}
