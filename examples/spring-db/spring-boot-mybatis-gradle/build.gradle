buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.24.1"
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'org.springframework.boot' version "2.1.7.RELEASE"
}

apply plugin: "java"
apply plugin: "java-library"
apply plugin: "idea"
apply plugin: "com.github.spotbugs"
apply plugin: "com.diffplug.gradle.spotless"
apply plugin: "maven"

group = 'wx'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusBootStarterVersion}"
    implementation "mysql:mysql-connector-java:${mysqlConnectorJavaVersion}"

    api "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    api "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    api "org.springframework.data:spring-data-commons:${springBootVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
    testImplementation "org.hamcrest:hamcrest-library:${hamcrestLibraryVersion}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotbugs {
    includeFilter = file("$rootDir/buildscripts/spotbugs-filter.xml")
}

bootRun {
    jvmArgs = ["-Duser.timezone=Asia/Shanghai"]
//    jvmArgs = ["-Duser.timezone=UTC"]
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotless {
    format 'misc', {
        target '**/*.gradle', '**/.gitignore'

        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
    freshmark {
        target '**/*.md'
    }
}

